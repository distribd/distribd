name: Release

on:
  pull_request:
    types: closed
    branches: [main]

jobs:
  info:
    if: github.event.pull_request.merged
    outputs:
      is-release: ${{ steps.meta.outputs.is-release }}
      crate: ${{ steps.meta.outputs.crate-names }}
      version: ${{ steps.meta.outputs.version-actual }}
      notes: ${{ steps.meta.outputs.notes }}

    runs-on: ubuntu-latest
    steps:
    - id: meta
      uses: cargo-bins/release-meta@v1
      with:
        event-data: ${{ toJSON(github.event) }}
        extract-notes-under: '### Release notes'

  release:
    needs: info
    if: needs.info.outputs.is-release == 'true'

    strategy:
      fail-fast: false
      matrix:
        include:
        - { o: macos-latest,    t: x86_64-apple-darwin        }
        - { o: macos-latest,    t: aarch64-apple-darwin       }
        - { o: ubuntu-latest,   t: x86_64-unknown-linux-musl  }
        - { o: ubuntu-latest,   t: aarch64-unknown-linux-musl }
        - { o: windows-latest,  t: x86_64-pc-windows-msvc     }
        - { o: windows-latest,  t: aarch64-pc-windows-msvc    }

    name: ${{ matrix.t }}
    runs-on: ${{ matrix.o }}
    steps:
    - uses: actions/checkout@v3
    - uses: cargo-bins/release-rust@v0
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        #crates-token: ${{ secrets.CRATES_TOKEN }}
        target: ${{ matrix.t }}

  containers:
    needs: [info]
    if: needs.info.outputs.is-release == 'true'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      #- name: Install cosign
      #  uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
      #  with:
      #    cosign-release: 'v1.9.0'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into ghcri.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      #- name: Login to DockerHub
      #  uses: docker/login-action@v2
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images:  |
            ghcr.io/distribd/distribd
            quay.io/distribd/distribd
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      #- name: Sign the published Docker image
      #  env:
      #    COSIGN_EXPERIMENTAL: "true"
      #  run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}
