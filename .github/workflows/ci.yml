name: CI

on:
  push:
    branches:
    - main
  pull_request: ~

jobs:
  clippy:
    name: clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - uses: giraffate/clippy-action@v1
        with:
          reporter: 'github-pr-review'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  tests:
    name: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test

  bench:
    name: bench
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo bench

  coverage:
    name: coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:0.30.0
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2

      - name: install build dependencies
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler git cmake make g++ gcc libclang-16-dev

      - name: Generate code coverage
        run: cargo tarpaulin --jobs 1 --out xml

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

